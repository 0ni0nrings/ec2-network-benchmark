---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'EC2 Network Benchmark: benchmark'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Parent Stacks'
      Parameters:
      - ParentVPCStack
      - ParentGlobalStack
    - Label:
        default: 'EC2 Parameters'
      Parameters:
      - InstanceTypeClient
      - InstanceTypeServer
Parameters:
  ParentVPCStack:
    Description: 'Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.'
    Type: String
  ParentGlobalStack:
    Description: 'Stack name of parent global stack based on global.yaml template.'
    Type: String
    Default: ''
  InstanceTypeClient:
    Description: 'The instance type for the EC2 instance.'
    Type: String
    Default: 't2.micro'
  SpotPriceClient:
    Description: 'The spot price for the EC2 instance.'
    Type: Number
    Default: 0
  InstanceTypeServer:
    Description: 'The instance type for the EC2 instance.'
    Type: String
    Default: 't2.micro'
  SpotPriceServer:
    Description: 'The spot price for the EC2 instance.'
    Type: Number
    Default: 0
Mappings:
  RegionMap:
    'ap-south-1':
      AMI: 'ami-d7abd1b8'
    'eu-west-2':
      AMI: 'ami-489f8e2c'
    'eu-west-1':
      AMI: 'ami-ebd02392'
    'ap-northeast-2':
      AMI: 'ami-8663bae8'
    'ap-northeast-1':
      AMI: 'ami-4af5022c'
    'sa-east-1':
      AMI: 'ami-d27203be'
    'ca-central-1':
      AMI: 'ami-5ac17f3e'
    'ap-southeast-1':
      AMI: 'ami-fdb8229e'
    'ap-southeast-2':
      AMI: 'ami-30041c53'
    'eu-central-1':
      AMI: 'ami-657bd20a'
    'us-east-1':
      AMI: 'ami-4fffc834'
    'us-east-2':
      AMI: 'ami-ea87a78f'
    'us-west-1':
      AMI: 'ami-3a674d5a'
    'us-west-2':
      AMI: 'ami-aa5ebdd2'
Conditions:
  HasSpotPriceClient: !Not [!Equals [!Ref SpotPriceClient, 0]]
  HasSpotPriceServer: !Not [!Equals [!Ref SpotPriceServer, 0]]
Resources:
  ClientMachineLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      SpotPrice: !If [HasSpotPriceClient, !Ref SpotPriceClient, !Ref 'AWS::NoValue']
      IamInstanceProfile:
        'Fn::ImportValue': !Sub '${ParentGlobalStack}-IAMInstanceProfileName'
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]
      InstanceType: !Ref InstanceTypeClient
      SecurityGroups:
      - 'Fn::ImportValue': !Sub '${ParentGlobalStack}-SecurityGroupId'
      InstanceMonitoring: true
      UserData: 
        'Fn::Base64': !Join
        - ''
        - - "#!/bin/bash -x \n"
          - "bash -ex << \"TRY\"\n"
          - "  yum-config-manager --enable epel \n"
          - "  yum clean all \n"
          - "  yum -y install iperf3 jq \n"
          - "  sleep 60 \n"
          - !Sub "SERVER_INSTANCE_ID=$(aws autoscaling describe-auto-scaling-groups --region ${AWS::Region} --auto-scaling-group-name ${ServerMachineAutoScalingGroup} --query AutoScalingGroups[*].Instances[0].InstanceId --output text) \n"
          - !Sub "SERVER_PRIVATE_IP=$(aws ec2 describe-instances --region ${AWS::Region} --instance-ids $SERVER_INSTANCE_ID --query Reservations[0].Instances[0].PrivateIpAddress --output text) \n"
          - " iperf3 --client $SERVER_PRIVATE_IP --time 30 --version4 --json -P 10 | jq -c '.' | aws s3 cp - \"s3://"
          - 'Fn::ImportValue': !Sub '${ParentGlobalStack}-S3BucketName'
          - !Sub "/d=$(date +%Y-%m-%d)/r=${AWS::Region}/it=${InstanceTypeClient}/t=default/$(date +%s).json\" \n"
          - "  iperf3 --client $SERVER_PRIVATE_IP --time 30 --version4 --json --reverse -P 10 | jq -c '.' | aws s3 cp - \"s3://"
          - 'Fn::ImportValue': !Sub '${ParentGlobalStack}-S3BucketName'
          - !Sub "/d=$(date +%Y-%m-%d)/r=${AWS::Region}/it=${InstanceTypeClient}/t=reverse/$(date +%s).json\" \n"
          - "TRY\n"
          - !Sub "/opt/aws/bin/cfn-signal -e $? --region ${AWS::Region} --stack ${AWS::StackName} --resource ClientMachineAutoScalingGroup \n"
  ClientMachineAutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName:  !Ref ClientMachineLaunchConfig
      MinSize: 1
      MaxSize: 1
      DesiredCapacity: 1
      VPCZoneIdentifier:
      - 'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetAPublic'
      Tags:
      - Key: Name
        Value: 'EC2 Network Benchmark Client'
        PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT5M
  ServerMachineLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      SpotPrice: !If [HasSpotPriceServer, !Ref SpotPriceServer, !Ref 'AWS::NoValue']
      IamInstanceProfile:
        'Fn::ImportValue': !Sub '${ParentGlobalStack}-IAMInstanceProfileName'
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]
      InstanceType: !Ref InstanceTypeServer
      SecurityGroups:
      - 'Fn::ImportValue': !Sub '${ParentGlobalStack}-SecurityGroupId'
      InstanceMonitoring: true
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -x
          bash -ex << "TRY"
            yum-config-manager --enable epel
            yum clean all
            yum -y install iperf3
          TRY
          /opt/aws/bin/cfn-signal -e $? --region ${AWS::Region} --stack ${AWS::StackName} --resource ServerMachineAutoScalingGroup
          iperf3 -s
  ServerMachineAutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      LaunchConfigurationName:  !Ref ServerMachineLaunchConfig
      MinSize: 1
      MaxSize: 1
      DesiredCapacity: 1
      VPCZoneIdentifier:
      - 'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetAPublic'
      Tags:
      - Key: Name
        Value: 'EC2 Network Benchmark Server'
        PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT5M
Outputs:
  StackName:
    Description: 'Stack name'
    Value: !Sub '${AWS::StackName}'
